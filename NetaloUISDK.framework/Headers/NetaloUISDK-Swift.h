#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.3.2 effective-4.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
#ifndef NETALOUISDK_SWIFT_H
#define NETALOUISDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AVFoundation;
@import AVKit;
@import CoreGraphics;
@import Foundation;
@import MessageKit;
@import ObjectiveC;
@import Photos;
@import RealmSwift;
@import UIKit;
@import UserNotifications;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="NetaloUISDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


@interface AVPlayerViewController (SWIFT_EXTENSION(NetaloUISDK))
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
@end


/// Asynchronous Operation base class
/// This class performs all of the necessary KVN of <code>isFinished</code> and
/// <code>isExecuting</code> for a concurrent <code>NSOperation</code> subclass. So, to developer
/// a concurrent NSOperation subclass, you instead subclass this class which:
/// <ul>
///   <li>
///     must override <code>main()</code> with the tasks that initiate the asynchronous task;
///   </li>
///   <li>
///     must call <code>completeOperation()</code> function when the asynchronous task is done;
///   </li>
///   <li>
///     optionally, periodically check <code>self.cancelled</code> status, performing any clean-up
///     necessary and then ensuring that <code>completeOperation()</code> is called; or
///     override <code>cancel</code> method, calling <code>super.cancel()</code> and then cleaning-up
///     and ensuring <code>completeOperation()</code> is called.
///   </li>
/// </ul>
SWIFT_CLASS("_TtC11NetaloUISDK21AsynchronousOperation")
@interface AsynchronousOperation : NSOperation
@property (nonatomic, readonly, getter=isAsynchronous) BOOL asynchronous;
@property (nonatomic, readonly, getter=isExecuting) BOOL executing;
@property (nonatomic, readonly, getter=isFinished) BOOL finished;
- (void)start;
- (void)main;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class AVAudioPlayer;

/// The <code>BasicAudioController</code> update UI for current audio cell that is playing a sound
/// and also creates and manage an <code>AVAudioPlayer</code> states, play, pause and stop.
SWIFT_CLASS("_TtC11NetaloUISDK20BasicAudioController")
@interface BasicAudioController : NSObject <AVAudioPlayerDelegate>
- (void)audioPlayerDidFinishPlaying:(AVAudioPlayer * _Nonnull)player successfully:(BOOL)flag;
- (void)audioPlayerDecodeErrorDidOccur:(AVAudioPlayer * _Nonnull)player error:(NSError * _Nullable)error;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end




@class NSCoder;

SWIFT_CLASS("_TtC11NetaloUISDK15CallMessageCell")
@interface CallMessageCell : MessageContentCell
- (void)prepareForReuse;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSBundle;

SWIFT_CLASS("_TtC11NetaloUISDK14ViewController")
@interface ViewController : UIViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)loadView;
- (void)viewWillDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UICollectionView;
@class UITraitCollection;
@protocol UIViewControllerTransitionCoordinator;

SWIFT_CLASS("_TtC11NetaloUISDK24CollectionViewController")
@interface CollectionViewController : ViewController
@property (nonatomic, weak) IBOutlet UICollectionView * _Null_unspecified collectionView;
- (void)loadView;
- (void)didReceiveMemoryWarning;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11NetaloUISDK6CallVC")
@interface CallVC : CollectionViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end







SWIFT_CLASS("_TtC11NetaloUISDK11Cancellable")
@interface Cancellable : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11NetaloUISDK15ChatContainerVC")
@interface ChatContainerVC : ViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end









@class UIDocumentPickerViewController;

@interface ChatContainerVC (SWIFT_EXTENSION(NetaloUISDK)) <UIDocumentPickerDelegate>
- (void)documentPicker:(UIDocumentPickerViewController * _Nonnull)controller didPickDocumentsAtURLs:(NSArray<NSURL *> * _Nonnull)urls;
- (void)documentPickerWasCancelled:(UIDocumentPickerViewController * _Nonnull)controller;
@end







@interface ChatContainerVC (SWIFT_EXTENSION(NetaloUISDK)) <UITextViewDelegate>
@end


@class UIColor;
@class NSAttributedString;
@class NSTextContainer;

IB_DESIGNABLE
SWIFT_CLASS("_TtC11NetaloUISDK12ChatTextView")
@interface ChatTextView : UITextView
@property (nonatomic, copy) IBInspectable NSString * _Nonnull placeholder;
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull placeholderColor;
@property (nonatomic) NSTextAlignment textAlignment;
@property (nonatomic, copy) NSString * _Null_unspecified text;
@property (nonatomic, strong) NSAttributedString * _Null_unspecified attributedText;
@property (nonatomic) UIEdgeInsets textContainerInset;
- (nonnull instancetype)initWithFrame:(CGRect)frame textContainer:(NSTextContainer * _Nullable)textContainer OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@end



@interface ChatTextView (SWIFT_EXTENSION(NetaloUISDK)) <UITextViewDelegate>
- (BOOL)textViewShouldBeginEditing:(UITextView * _Nonnull)textView SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textViewShouldEndEditing:(UITextView * _Nonnull)textView SWIFT_WARN_UNUSED_RESULT;
- (void)textViewDidChange:(UITextView * _Nonnull)textView;
- (void)textViewDidChangeSelection:(UITextView * _Nonnull)textView;
- (BOOL)textView:(UITextView * _Nonnull)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString * _Nonnull)text SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC11NetaloUISDK19ChatVideoController")
@interface ChatVideoController : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


@interface ChatVideoController (SWIFT_EXTENSION(NetaloUISDK)) <AVPlayerViewControllerDelegate>
@end


SWIFT_CLASS("_TtC11NetaloUISDK18CollectionViewCell")
@interface CollectionViewCell : UICollectionViewCell
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)awakeFromNib;
- (void)prepareForReuse;
@end



SWIFT_CLASS("_TtC11NetaloUISDK20CollectionViewSource")
@interface CollectionViewSource : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class UIScrollView;

@interface CollectionViewSource (SWIFT_EXTENSION(NetaloUISDK)) <UICollectionViewDelegate>
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView willDisplayCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didEndDisplayingCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
@end

@class UICollectionViewLayout;

@interface CollectionViewSource (SWIFT_EXTENSION(NetaloUISDK)) <UICollectionViewDelegateFlowLayout>
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UIEdgeInsets)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout insetForSectionAtIndex:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout minimumLineSpacingForSectionAtIndex:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout minimumInteritemSpacingForSectionAtIndex:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout referenceSizeForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout referenceSizeForFooterInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
@end

@class UICollectionReusableView;

@interface CollectionViewSource (SWIFT_EXTENSION(NetaloUISDK)) <UICollectionViewDataSource>
- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView * _Nonnull)collectionView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UICollectionReusableView * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView viewForSupplementaryElementOfKind:(NSString * _Nonnull)kind atIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (BOOL)collectionView:(UICollectionView * _Nonnull)collectionView canMoveItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView moveItemAtIndexPath:(NSIndexPath * _Nonnull)sourceIndexPath toIndexPath:(NSIndexPath * _Nonnull)destinationIndexPath;
@end


SWIFT_CLASS("_TtC11NetaloUISDK7Contact")
@interface Contact : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC11NetaloUISDK14ConversationVC")
@interface ConversationVC : CollectionViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end








/// A subclass of <code>MessageContentCell</code> used to display video and audio messages.
SWIFT_CLASS("_TtC11NetaloUISDK22CustomAudioMessageCell")
@interface CustomAudioMessageCell : MessageContentCell
- (void)prepareForReuse;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC11NetaloUISDK25CustomLocationMessageCell")
@interface CustomLocationMessageCell : MessageContentCell
- (void)prepareForReuse;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11NetaloUISDK24CustomMessagesFlowLayout")
@interface CustomMessagesFlowLayout : MessagesCollectionViewFlowLayout
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11NetaloUISDK15FileLibraryCell")
@interface FileLibraryCell : CollectionViewCell
- (void)awakeFromNib;
- (void)prepareForReuse;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC11NetaloUISDK15FileMessageCell")
@interface FileMessageCell : MessageContentCell
- (void)prepareForReuse;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11NetaloUISDK18ForwardMessageCell")
@interface ForwardMessageCell : MessageContentCell
- (void)layoutSubviews;
- (void)prepareForReuse;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


IB_DESIGNABLE
SWIFT_CLASS("_TtC11NetaloUISDK12GradientView")
@interface GradientView : UIView
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layerClass;)
+ (Class _Nonnull)layerClass SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIImageView;
@class UITapGestureRecognizer;
@class UILongPressGestureRecognizer;

/// Used to wrap a single slideshow item and allow zooming on it
SWIFT_CLASS("_TtC11NetaloUISDK15ImageDetailItem")
@interface ImageDetailItem : UIScrollView <UIScrollViewDelegate>
/// Image view to hold the image
@property (nonatomic, readonly, strong) UIImageView * _Nonnull imageView;
/// Input Source for the item
@property (nonatomic, copy) NSString * _Nullable imageURL;
/// Guesture recognizer to detect double tap to zoom
@property (nonatomic, strong) UITapGestureRecognizer * _Nullable doubleTapGestureRecognizer;
@property (nonatomic, strong) UILongPressGestureRecognizer * _Nullable longPressGesture;
/// Holds if the zoom feature is enabled
@property (nonatomic, readonly) BOOL zoomEnabled;
/// If set to true image is initially zoomed in
@property (nonatomic) BOOL zoomInInitially;
/// Maximum zoom scale
@property (nonatomic) CGFloat maximumScale;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
/// Request to load Image Source to Image View
- (void)loadImage;
- (void)scrollViewDidZoom:(UIScrollView * _Nonnull)scrollView;
- (UIView * _Nullable)viewForZoomingInScrollView:(UIScrollView * _Nonnull)scrollView SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC11NetaloUISDK14IncomingCallVC")
@interface IncomingCallVC : ViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end





IB_DESIGNABLE
SWIFT_CLASS("_TtC11NetaloUISDK15KCCircularTimer")
@interface KCCircularTimer : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// The current value of the timer.
@property (nonatomic) IBInspectable double currentValue;
/// The maximum value of the timer.  Along with the current value, it
/// is used to determine how much of the circle is filled.
@property (nonatomic) IBInspectable double maximumValue;
/// The percent of the size of the view to use
/// as the width of the line of the progress arc.
@property (nonatomic) IBInspectable CGFloat borderFactor;
/// The percent of the size of the view to use
/// as the width of the line of the circle in the
/// background.
@property (nonatomic) IBInspectable CGFloat circleFactor;
/// The percent of the size of the view used to determine the
/// distance the circle is inset from its edge.
@property (nonatomic) IBInspectable CGFloat insetFactor;
/// The color of the progress arc.  Setting this property overrides
/// any previous color set via the tintColor property.
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull progressColor;
/// The color of the background circle.  This property allows setting
/// explicit color not based on the tintColor.
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull circleColor;
/// The alpha of the background circle.  Only used when setting the
/// color via the tintColor.  The tintColor and this alpha are used
/// to set the color of the background circle.  If you need finer
/// control, set the circleColor directly.
@property (nonatomic) IBInspectable CGFloat circleAlpha;
/// The name of the font to use for the numeric timer in the center
/// of the circle.  If set and the font name is valid, it overrides
/// the default which is the system font.
@property (nonatomic, copy) IBInspectable NSString * _Nullable fontName;
/// The font size of the numeric timer in the center of the circle.
/// The default is 0 which results in a font size used based on the
/// inner dimensions of the circle.
@property (nonatomic) IBInspectable CGFloat fontSize;
/// Does the timer move clockwise or counter-clockwise.
@property (nonatomic) IBInspectable BOOL clockwise;
/// Determines if the numeric timer should be shown.
@property (nonatomic) IBInspectable BOOL showNumber;
/// The number of decimal places to display for the value.
/// Valid values are 0, 1, and 2.
@property (nonatomic) IBInspectable NSInteger decimalPlaces;
- (void)didMoveToWindow;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layerClass;)
+ (Class _Nonnull)layerClass SWIFT_WARN_UNUSED_RESULT;
- (void)tintColorDidChange;
@end


SWIFT_CLASS("_TtC11NetaloUISDK23LiveLocationMessageCell")
@interface LiveLocationMessageCell : MessageContentCell
- (void)prepareForReuse;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC11NetaloUISDK15MediaDetailCell")
@interface MediaDetailCell : CollectionViewCell
- (void)awakeFromNib;
- (void)layoutSubviews;
- (void)prepareForReuse;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11NetaloUISDK27MediaLibraryVideoController")
@interface MediaLibraryVideoController : NSObject <AVAudioPlayerDelegate>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface MediaLibraryVideoController (SWIFT_EXTENSION(NetaloUISDK)) <AVPlayerViewControllerDelegate>
@end



SWIFT_CLASS("_TtC11NetaloUISDK18MultiImagePickerVC")
@interface MultiImagePickerVC : ViewController
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@class PHChange;

@interface MultiImagePickerVC (SWIFT_EXTENSION(NetaloUISDK)) <PHPhotoLibraryChangeObserver>
- (void)photoLibraryDidChange:(PHChange * _Nonnull)changeInstance;
@end

@class UIImagePickerController;

@interface MultiImagePickerVC (SWIFT_EXTENSION(NetaloUISDK)) <UIImagePickerControllerDelegate, UINavigationControllerDelegate>
- (void)imagePickerController:(UIImagePickerController * _Nonnull)picker didFinishPickingMediaWithInfo:(NSDictionary<UIImagePickerControllerInfoKey, id> * _Nonnull)info;
@end



@interface MultiImagePickerVC (SWIFT_EXTENSION(NetaloUISDK)) <UICollectionViewDataSourcePrefetching>
- (void)collectionView:(UICollectionView * _Nonnull)collectionView prefetchItemsAtIndexPaths:(NSArray<NSIndexPath *> * _Nonnull)indexPaths;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView cancelPrefetchingForItemsAtIndexPaths:(NSArray<NSIndexPath *> * _Nonnull)indexPaths;
@end


@interface MultiImagePickerVC (SWIFT_EXTENSION(NetaloUISDK)) <UICollectionViewDataSource>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end




@interface MultiImagePickerVC (SWIFT_EXTENSION(NetaloUISDK)) <UICollectionViewDelegate>
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (BOOL)collectionView:(UICollectionView * _Nonnull)collectionView shouldSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didDeselectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


@interface MultiImagePickerVC (SWIFT_EXTENSION(NetaloUISDK)) <UICollectionViewDelegateFlowLayout>
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout minimumLineSpacingForSectionAtIndex:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout minimumInteritemSpacingForSectionAtIndex:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UIEdgeInsets)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout insetForSectionAtIndex:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
@end








SWIFT_CLASS("_TtC11NetaloUISDK15NTDropDownAlert")
@interface NTDropDownAlert : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end





SWIFT_PROTOCOL("_TtP11NetaloUISDK16NetaloUIDelegate_")
@protocol NetaloUIDelegate
- (void)sessionExpired;
- (void)userDidLogout;
- (void)presentWithViewController:(UIViewController * _Nonnull)viewController;
- (void)pushWithViewController:(UIViewController * _Nonnull)viewController;
- (void)popTo:(UIViewController * _Nonnull)viewController;
- (void)openContact;
- (void)switchToMainScreen;
- (UIViewController * _Nullable)topMostViewController SWIFT_WARN_UNUSED_RESULT;
- (UIViewController * _Nullable)getConversationViewController SWIFT_WARN_UNUSED_RESULT;
- (void)updateStatusBarWithStyle:(UIStatusBarStyle)style;
- (void)updateThemeColor:(NSInteger)themeColor;
- (void)checkChatFunctionsWith:(NSString * _Nonnull)userId;
@end

@protocol NetaloUser;

SWIFT_CLASS("_TtC11NetaloUISDK11NetaloUISDK")
@interface NetaloUISDK : NSObject
- (void)setTheme:(NSInteger)themeType;
+ (id <NetaloUser> _Nullable)authorizedUser SWIFT_WARN_UNUSED_RESULT;
- (void)addWithDelegate:(id <NetaloUIDelegate> _Nonnull)delegate;
- (void)removeWithDelegate:(id <NetaloUIDelegate> _Nonnull)delegate;
- (UIViewController * _Nonnull)buildConversationViewController SWIFT_WARN_UNUSED_RESULT;
- (UIViewController * _Nonnull)buildHistoryCallViewController SWIFT_WARN_UNUSED_RESULT;
- (UIViewController * _Nonnull)buildContactViewController SWIFT_WARN_UNUSED_RESULT;
- (UIViewController * _Nonnull)buildProfileViewController SWIFT_WARN_UNUSED_RESULT;
- (UIViewController * _Nonnull)buildChatViewController:(id <NetaloUser> _Nonnull)netaloUser type:(NSInteger)type SWIFT_WARN_UNUSED_RESULT;
- (UIViewController * _Nullable)buildChatViewControllerWithPhoneNumber:(NSString * _Nonnull)phoneNumber SWIFT_WARN_UNUSED_RESULT;
- (void)setWithUser:(id <NetaloUser> _Nonnull)user;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



@interface NetaloUISDK (SWIFT_EXTENSION(NetaloUISDK))
- (nonnull instancetype)initWithAppId:(int64_t)appId appKey:(NSString * _Nonnull)appKey accountKey:(NSString * _Nonnull)accountKey appGroupIdentifier:(NSString * _Nonnull)appGroupIdentifier enviroment:(NSInteger)enviroment userId:(int64_t)userId fullName:(NSString * _Nonnull)fullName userSession:(NSString * _Nonnull)userSession avatarId:(NSString * _Nonnull)avatarId phoneNumber:(NSString * _Nonnull)phoneNumber;
- (nonnull instancetype)initWithAppId:(int64_t)appId appKey:(NSString * _Nonnull)appKey accountKey:(NSString * _Nonnull)accountKey appGroupIdentifier:(NSString * _Nonnull)appGroupIdentifier enviroment:(NSInteger)enviroment;
- (void)setUserWithUserId:(int64_t)userId fullName:(NSString * _Nonnull)fullName userSession:(NSString * _Nonnull)userSession avatarId:(NSString * _Nonnull)avatarId phoneNumber:(NSString * _Nonnull)phoneNumber canCreateGroup:(BOOL)canCreateGroup;
@end

@class UNUserNotificationCenter;
@class UNNotification;
@class UNNotificationResponse;

@interface NetaloUISDK (SWIFT_EXTENSION(NetaloUISDK)) <UNUserNotificationCenterDelegate>
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center willPresentNotification:(UNNotification * _Nonnull)notification withCompletionHandler:(void (^ _Nonnull)(UNNotificationPresentationOptions))completionHandler;
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center didReceiveNotificationResponse:(UNNotificationResponse * _Nonnull)response withCompletionHandler:(void (^ _Nonnull)(void))completionHandler;
@end

@class UIApplication;
@class NSUserActivity;
@protocol UIUserActivityRestoring;
@class UIWindow;

@interface NetaloUISDK (SWIFT_EXTENSION(NetaloUISDK)) <UIApplicationDelegate>
- (BOOL)application:(UIApplication * _Nonnull)application didFinishLaunchingWithOptions:(NSDictionary<UIApplicationLaunchOptionsKey, id> * _Nullable)launchOptions SWIFT_WARN_UNUSED_RESULT;
- (void)applicationDidBecomeActive:(UIApplication * _Nonnull)application;
- (void)applicationWillTerminate:(UIApplication * _Nonnull)application;
- (void)applicationWillResignActive:(UIApplication * _Nonnull)application;
- (void)application:(UIApplication * _Nonnull)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData * _Nonnull)deviceToken;
- (BOOL)application:(UIApplication * _Nonnull)application continueUserActivity:(NSUserActivity * _Nonnull)userActivity restorationHandler:(void (^ _Nonnull)(NSArray<id <UIUserActivityRestoring>> * _Nullable))restorationHandler SWIFT_WARN_UNUSED_RESULT;
- (UIInterfaceOrientationMask)application:(UIApplication * _Nonnull)application supportedInterfaceOrientationsForWindow:(UIWindow * _Nullable)window SWIFT_WARN_UNUSED_RESULT;
- (BOOL)application:(UIApplication * _Nonnull)app openURL:(NSURL * _Nonnull)url options:(NSDictionary<UIApplicationOpenURLOptionsKey, id> * _Nonnull)options SWIFT_WARN_UNUSED_RESULT;
- (BOOL)application:(UIApplication * _Nonnull)application openURL:(NSURL * _Nonnull)url sourceApplication:(NSString * _Nullable)sourceApplication annotation:(id _Nonnull)annotation SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_PROTOCOL("_TtP11NetaloUISDK10NetaloUser_")
@protocol NetaloUser
@property (nonatomic, readonly) int64_t id;
@property (nonatomic, readonly, copy) NSString * _Nonnull phoneNumber;
@property (nonatomic, readonly, copy) NSString * _Nonnull email;
@property (nonatomic, readonly, copy) NSString * _Nonnull fullName;
@property (nonatomic, readonly, copy) NSString * _Nonnull avatarUrl;
@property (nonatomic, readonly, copy) NSString * _Nonnull session;
@property (nonatomic, readonly) BOOL canCreateGroup;
@end





SWIFT_CLASS("_TtC11NetaloUISDK14OutgoingCallVC")
@interface OutgoingCallVC : ViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end






SWIFT_CLASS("_TtC11NetaloUISDK10Permission")
@interface Permission : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end







SWIFT_CLASS("_TtC11NetaloUISDK13QBCallManager")
@interface QBCallManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end






SWIFT_CLASS("_TtC11NetaloUISDK16RMChatBackground")
@interface RMChatBackground : RealmSwiftObject
+ (NSString * _Nullable)primaryKey SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class CALayer;
@class UITouch;
@class UIEvent;

IB_DESIGNABLE
SWIFT_CLASS("_TtC11NetaloUISDK11RangeSlider")
@interface RangeSlider : UIControl
@property (nonatomic) IBInspectable double minimumValue;
@property (nonatomic) IBInspectable double maximumValue;
@property (nonatomic) IBInspectable double lowerValue;
@property (nonatomic) IBInspectable double upperValue;
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull trackTintColor;
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull trackHighlightTintColor;
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull thumbTintColor;
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull thumbBorderColor;
@property (nonatomic) IBInspectable CGFloat thumbBorderWidth;
@property (nonatomic) IBInspectable CGFloat curvaceousness;
@property (nonatomic) CGRect frame;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSublayersOfLayer:(CALayer * _Nonnull)of;
- (BOOL)beginTrackingWithTouch:(UITouch * _Nonnull)touch withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
- (BOOL)continueTrackingWithTouch:(UITouch * _Nonnull)touch withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
- (void)endTrackingWithTouch:(UITouch * _Nullable)touch withEvent:(UIEvent * _Nullable)event;
@end


SWIFT_CLASS("_TtC11NetaloUISDK16SwiftLinkPreview")
@interface SwiftLinkPreview : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class NSURLSession;
@class NSURLSessionTask;
@class NSHTTPURLResponse;

@interface SwiftLinkPreview (SWIFT_EXTENSION(NetaloUISDK)) <NSURLSessionDataDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task willPerformHTTPRedirection:(NSHTTPURLResponse * _Nonnull)response newRequest:(NSURLRequest * _Nonnull)request completionHandler:(void (^ _Nonnull)(NSURLRequest * _Nullable))completionHandler;
@end



enum TTGSnackbarDuration : NSInteger;
enum TTGSnackbarAnimationType : NSInteger;
@class TTGSnackbarLabel;
@class UIFont;
@class UIButton;
@class UIImage;
@class UIActivityIndicatorView;

SWIFT_CLASS("_TtC11NetaloUISDK11TTGSnackbar")
@interface TTGSnackbar : UIView
/// Snackbar default frame
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) CGRect snackbarDefaultFrame;)
+ (CGRect)snackbarDefaultFrame SWIFT_WARN_UNUSED_RESULT;
+ (void)setSnackbarDefaultFrame:(CGRect)value;
/// Snackbar min height
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) CGFloat snackbarMinHeight;)
+ (CGFloat)snackbarMinHeight SWIFT_WARN_UNUSED_RESULT;
+ (void)setSnackbarMinHeight:(CGFloat)value;
/// Tap callback
@property (nonatomic, copy) void (^ _Nullable onTapBlock)(TTGSnackbar * _Nonnull);
/// Swipe callback
@property (nonatomic, copy) void (^ _Nullable onSwipeBlock)(TTGSnackbar * _Nonnull, UISwipeGestureRecognizerDirection);
/// A property to make the snackbar auto dismiss on Swipe Gesture
@property (nonatomic) BOOL shouldDismissOnSwipe;
/// A property to enable left and right margin when using customContentView
@property (nonatomic) BOOL shouldActivateLeftAndRightMarginOnCustomContentView;
/// A property to allow for disabling the use of “Safe Area Layout Guides” on newer OS devices.
/// The purpose of this is to allow the a snackbar to extend under the “Swipe Up for Home” area
/// on iPhone X and newer devices.
@property (nonatomic) BOOL shouldHonorSafeAreaLayoutGuides;
/// Action callback.
@property (nonatomic, copy) void (^ _Nullable actionBlock)(TTGSnackbar * _Nonnull);
/// Second action block
@property (nonatomic, copy) void (^ _Nullable secondActionBlock)(TTGSnackbar * _Nonnull);
/// Dismiss callback.
@property (nonatomic, copy) void (^ _Nullable dismissBlock)(TTGSnackbar * _Nonnull);
/// Snackbar display duration. Default is Short = 1 second.
@property (nonatomic) enum TTGSnackbarDuration duration;
/// Snackbar animation type. Default is SlideFromBottomBackToBottom.
@property (nonatomic) enum TTGSnackbarAnimationType animationType;
/// Show and hide animation duration. Default is 0.3
@property (nonatomic) NSTimeInterval animationDuration;
/// Corner radius: [0, height / 2]. Default is 4
@property (nonatomic) CGFloat _cornerRadius;
/// Border color of snackbar. Default is clear.
@property (nonatomic, strong) UIColor * _Nullable _borderColor;
/// Border width of snackbar. Default is 1.
@property (nonatomic) CGFloat _borderWidth;
/// Top margin. Default is 4, only work when snackbar is at top
@property (nonatomic) CGFloat topMargin;
/// Bottom margin. Default is 4, only work when snackbar is at bottom
@property (nonatomic) CGFloat bottomMargin;
/// Left margin. Default is 4
@property (nonatomic) CGFloat leftMargin;
/// Right margin. Default is 4
@property (nonatomic) CGFloat rightMargin;
/// Content inset. Default is (0, 4, 0, 4)
@property (nonatomic) UIEdgeInsets contentInset;
/// Label content inset. Default is (0, 0, 0, 0)
@property (nonatomic) UIEdgeInsets messageContentInset;
/// Main text label
@property (nonatomic, readonly, strong) TTGSnackbarLabel * _Null_unspecified messageLabel;
/// Main text shown on the snackbar.
@property (nonatomic, copy) NSString * _Nonnull message;
/// Message text color. Default is white.
@property (nonatomic, strong) UIColor * _Nonnull messageTextColor;
/// Message text font. Default is Bold system font (14).
@property (nonatomic, strong) UIFont * _Nonnull messageTextFont;
/// Message text alignment. Default is left
@property (nonatomic) NSTextAlignment messageTextAlign;
/// Action button
@property (nonatomic, readonly, strong) UIButton * _Null_unspecified actionButton;
/// Action button title.
@property (nonatomic, copy) NSString * _Nonnull actionText;
/// Action button image.
@property (nonatomic, strong) UIImage * _Nullable actionIcon;
/// Second action button
@property (nonatomic, readonly, strong) UIButton * _Null_unspecified secondActionButton;
/// Second action button title.
@property (nonatomic, copy) NSString * _Nonnull secondActionText;
/// Second action button image.
@property (nonatomic, strong) UIImage * _Nullable secondActionIcon;
/// Action button title color. Default is white.
@property (nonatomic, strong) UIColor * _Nonnull actionTextColor;
/// Second action button title color. Default is white.
@property (nonatomic, strong) UIColor * _Nonnull secondActionTextColor;
/// Action text font. Default is Bold system font (14).
@property (nonatomic, strong) UIFont * _Nonnull actionTextFont;
/// Second action text font. Default is Bold system font (14).
@property (nonatomic, strong) UIFont * _Nonnull secondActionTextFont;
/// All action button max width, min = 44
@property (nonatomic) CGFloat actionMaxWidth;
/// All action button text number of lines. Default is 1
@property (nonatomic) NSInteger actionTextNumberOfLines;
/// Icon imageView
@property (nonatomic, readonly, strong) UIImageView * _Null_unspecified iconImageView;
/// Icon image
@property (nonatomic, strong) UIImage * _Nullable icon;
/// Icon image content
@property (nonatomic) UIViewContentMode iconContentMode;
/// Icon background color. Default is clear.
@property (nonatomic, strong) UIColor * _Nullable iconBackgroundColor;
/// Icon tint color
@property (nonatomic, strong) UIColor * _Null_unspecified iconTintColor;
/// Icon width
@property (nonatomic) CGFloat iconImageViewWidth;
/// Custom container view
@property (nonatomic, strong) UIView * _Nullable containerView;
/// Custom content view
@property (nonatomic, strong) UIView * _Nullable customContentView;
/// SeparateView background color
@property (nonatomic, strong) UIColor * _Nonnull separateViewBackgroundColor;
/// ActivityIndicatorView
@property (nonatomic, readonly, strong) UIActivityIndicatorView * _Null_unspecified activityIndicatorView;
/// ActivityIndicatorViewStyle
@property (nonatomic) UIActivityIndicatorViewStyle activityIndicatorViewStyle;
/// ActivityIndicatorView color
@property (nonatomic, strong) UIColor * _Nonnull activityIndicatorViewColor;
/// Animation SpringWithDamping. Default is 0.7
@property (nonatomic) CGFloat animationSpringWithDamping;
/// Animation initialSpringVelocity. Default is 5
@property (nonatomic) CGFloat animationInitialSpringVelocity;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
/// Default init
///
/// returns:
/// TTGSnackbar instance
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// Show a single message like a Toast.
/// \param message Message text.
///
/// \param duration Duration type.
///
///
/// returns:
/// TTGSnackbar instance
- (nonnull instancetype)initWithMessage:(NSString * _Nonnull)message duration:(enum TTGSnackbarDuration)duration OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@end





@interface TTGSnackbar (SWIFT_EXTENSION(NetaloUISDK))
/// Show the snackbar.
- (void)show;
@end



@interface TTGSnackbar (SWIFT_EXTENSION(NetaloUISDK))
/// Dismiss the snackbar manually.
- (void)dismiss;
@end

/// Snackbar animation types.
/// <ul>
///   <li>
///     fadeInFadeOut:               Fade in to show and fade out to dismiss.
///   </li>
///   <li>
///     slideFromBottomToTop:        Slide from the bottom of screen to show and slide up to dismiss.
///   </li>
///   <li>
///     slideFromBottomBackToBottom: Slide from the bottom of screen to show and slide back to bottom to dismiss.
///   </li>
///   <li>
///     slideFromLeftToRight:        Slide from the left to show and slide to rigth to dismiss.
///   </li>
///   <li>
///     slideFromRightToLeft:        Slide from the right to show and slide to left to dismiss.
///   </li>
///   <li>
///     slideFromTopToBottom:        Slide from the top of screen to show and slide down to dismiss.
///   </li>
///   <li>
///     slideFromTopBackToTop:       Slide from the top of screen to show and slide back to top to dismiss.
///   </li>
/// </ul>
typedef SWIFT_ENUM(NSInteger, TTGSnackbarAnimationType, closed) {
  TTGSnackbarAnimationTypeFadeInFadeOut = 0,
  TTGSnackbarAnimationTypeSlideFromBottomToTop = 1,
  TTGSnackbarAnimationTypeSlideFromBottomBackToBottom = 2,
  TTGSnackbarAnimationTypeSlideFromLeftToRight = 3,
  TTGSnackbarAnimationTypeSlideFromRightToLeft = 4,
  TTGSnackbarAnimationTypeSlideFromTopToBottom = 5,
  TTGSnackbarAnimationTypeSlideFromTopBackToTop = 6,
};

/// Snackbar display duration types.
/// <ul>
///   <li>
///     short:   1 second
///   </li>
///   <li>
///     middle:  3 seconds
///   </li>
///   <li>
///     long:    5 seconds
///   </li>
///   <li>
///     forever: Not dismiss automatically. Must be dismissed manually.
///   </li>
/// </ul>
typedef SWIFT_ENUM(NSInteger, TTGSnackbarDuration, closed) {
  TTGSnackbarDurationShort = 1,
  TTGSnackbarDurationMiddle = 3,
  TTGSnackbarDurationLong = 5,
  TTGSnackbarDurationForever = 2147483647,
};


SWIFT_CLASS("_TtC11NetaloUISDK16TTGSnackbarLabel")
@interface TTGSnackbarLabel : UILabel
@property (nonatomic) UIEdgeInsets contentInset;
- (void)drawTextInRect:(CGRect)rect;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end














@interface UIColor (SWIFT_EXTENSION(NetaloUISDK))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull ttgDefaultText;)
+ (UIColor * _Nonnull)ttgDefaultText SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull ttgDefaultBackground;)
+ (UIColor * _Nonnull)ttgDefaultBackground SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull ttgDefaultShadow;)
+ (UIColor * _Nonnull)ttgDefaultShadow SWIFT_WARN_UNUSED_RESULT;
@end
































SWIFT_CLASS("_TtC11NetaloUISDK16VideoMessageCell")
@interface VideoMessageCell : MessageContentCell
- (void)layoutSubviews;
- (void)prepareForReuse;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end




@interface ViewController (SWIFT_EXTENSION(NetaloUISDK)) <UIGestureRecognizerDelegate>
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.3.2 effective-4.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
#ifndef NETALOUISDK_SWIFT_H
#define NETALOUISDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AVFoundation;
@import AVKit;
@import CoreGraphics;
@import Foundation;
@import MessageKit;
@import ObjectiveC;
@import Photos;
@import RealmSwift;
@import UIKit;
@import UserNotifications;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="NetaloUISDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


@interface AVPlayerViewController (SWIFT_EXTENSION(NetaloUISDK))
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
@end


/// Asynchronous Operation base class
/// This class performs all of the necessary KVN of <code>isFinished</code> and
/// <code>isExecuting</code> for a concurrent <code>NSOperation</code> subclass. So, to developer
/// a concurrent NSOperation subclass, you instead subclass this class which:
/// <ul>
///   <li>
///     must override <code>main()</code> with the tasks that initiate the asynchronous task;
///   </li>
///   <li>
///     must call <code>completeOperation()</code> function when the asynchronous task is done;
///   </li>
///   <li>
///     optionally, periodically check <code>self.cancelled</code> status, performing any clean-up
///     necessary and then ensuring that <code>completeOperation()</code> is called; or
///     override <code>cancel</code> method, calling <code>super.cancel()</code> and then cleaning-up
///     and ensuring <code>completeOperation()</code> is called.
///   </li>
/// </ul>
SWIFT_CLASS("_TtC11NetaloUISDK21AsynchronousOperation")
@interface AsynchronousOperation : NSOperation
@property (nonatomic, readonly, getter=isAsynchronous) BOOL asynchronous;
@property (nonatomic, readonly, getter=isExecuting) BOOL executing;
@property (nonatomic, readonly, getter=isFinished) BOOL finished;
- (void)start;
- (void)main;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class AVAudioPlayer;

/// The <code>BasicAudioController</code> update UI for current audio cell that is playing a sound
/// and also creates and manage an <code>AVAudioPlayer</code> states, play, pause and stop.
SWIFT_CLASS("_TtC11NetaloUISDK20BasicAudioController")
@interface BasicAudioController : NSObject <AVAudioPlayerDelegate>
- (void)audioPlayerDidFinishPlaying:(AVAudioPlayer * _Nonnull)player successfully:(BOOL)flag;
- (void)audioPlayerDecodeErrorDidOccur:(AVAudioPlayer * _Nonnull)player error:(NSError * _Nullable)error;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end




@class NSCoder;

SWIFT_CLASS("_TtC11NetaloUISDK15CallMessageCell")
@interface CallMessageCell : MessageContentCell
- (void)prepareForReuse;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSBundle;

SWIFT_CLASS("_TtC11NetaloUISDK14ViewController")
@interface ViewController : UIViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)loadView;
- (void)viewWillDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UICollectionView;
@class UITraitCollection;
@protocol UIViewControllerTransitionCoordinator;

SWIFT_CLASS("_TtC11NetaloUISDK24CollectionViewController")
@interface CollectionViewController : ViewController
@property (nonatomic, weak) IBOutlet UICollectionView * _Null_unspecified collectionView;
- (void)loadView;
- (void)didReceiveMemoryWarning;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11NetaloUISDK6CallVC")
@interface CallVC : CollectionViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end







SWIFT_CLASS("_TtC11NetaloUISDK11Cancellable")
@interface Cancellable : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11NetaloUISDK15ChatContainerVC")
@interface ChatContainerVC : ViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end









@class UIDocumentPickerViewController;

@interface ChatContainerVC (SWIFT_EXTENSION(NetaloUISDK)) <UIDocumentPickerDelegate>
- (void)documentPicker:(UIDocumentPickerViewController * _Nonnull)controller didPickDocumentsAtURLs:(NSArray<NSURL *> * _Nonnull)urls;
- (void)documentPickerWasCancelled:(UIDocumentPickerViewController * _Nonnull)controller;
@end







@interface ChatContainerVC (SWIFT_EXTENSION(NetaloUISDK)) <UITextViewDelegate>
@end


@class UIColor;
@class NSAttributedString;
@class NSTextContainer;

IB_DESIGNABLE
SWIFT_CLASS("_TtC11NetaloUISDK12ChatTextView")
@interface ChatTextView : UITextView
@property (nonatomic, copy) IBInspectable NSString * _Nonnull placeholder;
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull placeholderColor;
@property (nonatomic) NSTextAlignment textAlignment;
@property (nonatomic, copy) NSString * _Null_unspecified text;
@property (nonatomic, strong) NSAttributedString * _Null_unspecified attributedText;
@property (nonatomic) UIEdgeInsets textContainerInset;
- (nonnull instancetype)initWithFrame:(CGRect)frame textContainer:(NSTextContainer * _Nullable)textContainer OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@end



@interface ChatTextView (SWIFT_EXTENSION(NetaloUISDK)) <UITextViewDelegate>
- (BOOL)textViewShouldBeginEditing:(UITextView * _Nonnull)textView SWIFT_WARN_UNUSED_RESULT;
- (BOOL)textViewShouldEndEditing:(UITextView * _Nonnull)textView SWIFT_WARN_UNUSED_RESULT;
- (void)textViewDidChange:(UITextView * _Nonnull)textView;
- (void)textViewDidChangeSelection:(UITextView * _Nonnull)textView;
- (BOOL)textView:(UITextView * _Nonnull)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString * _Nonnull)text SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC11NetaloUISDK19ChatVideoController")
@interface ChatVideoController : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


@interface ChatVideoController (SWIFT_EXTENSION(NetaloUISDK)) <AVPlayerViewControllerDelegate>
@end


SWIFT_CLASS("_TtC11NetaloUISDK18CollectionViewCell")
@interface CollectionViewCell : UICollectionViewCell
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)awakeFromNib;
- (void)prepareForReuse;
@end



SWIFT_CLASS("_TtC11NetaloUISDK20CollectionViewSource")
@interface CollectionViewSource : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class UIScrollView;

@interface CollectionViewSource (SWIFT_EXTENSION(NetaloUISDK)) <UICollectionViewDelegate>
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView willDisplayCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didEndDisplayingCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
@end

@class UICollectionViewLayout;

@interface CollectionViewSource (SWIFT_EXTENSION(NetaloUISDK)) <UICollectionViewDelegateFlowLayout>
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UIEdgeInsets)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout insetForSectionAtIndex:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout minimumLineSpacingForSectionAtIndex:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout minimumInteritemSpacingForSectionAtIndex:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout referenceSizeForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout referenceSizeForFooterInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
@end

@class UICollectionReusableView;

@interface CollectionViewSource (SWIFT_EXTENSION(NetaloUISDK)) <UICollectionViewDataSource>
- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView * _Nonnull)collectionView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UICollectionReusableView * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView viewForSupplementaryElementOfKind:(NSString * _Nonnull)kind atIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (BOOL)collectionView:(UICollectionView * _Nonnull)collectionView canMoveItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView moveItemAtIndexPath:(NSIndexPath * _Nonnull)sourceIndexPath toIndexPath:(NSIndexPath * _Nonnull)destinationIndexPath;
@end


SWIFT_CLASS("_TtC11NetaloUISDK7Contact")
@interface Contact : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC11NetaloUISDK14ConversationVC")
@interface ConversationVC : CollectionViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end








/// A subclass of <code>MessageContentCell</code> used to display video and audio messages.
SWIFT_CLASS("_TtC11NetaloUISDK22CustomAudioMessageCell")
@interface CustomAudioMessageCell : MessageContentCell
- (void)prepareForReuse;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC11NetaloUISDK25CustomLocationMessageCell")
@interface CustomLocationMessageCell : MessageContentCell
- (void)prepareForReuse;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11NetaloUISDK24CustomMessagesFlowLayout")
@interface CustomMessagesFlowLayout : MessagesCollectionViewFlowLayout
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11NetaloUISDK15FileLibraryCell")
@interface FileLibraryCell : CollectionViewCell
- (void)awakeFromNib;
- (void)prepareForReuse;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC11NetaloUISDK15FileMessageCell")
@interface FileMessageCell : MessageContentCell
- (void)prepareForReuse;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11NetaloUISDK18ForwardMessageCell")
@interface ForwardMessageCell : MessageContentCell
- (void)layoutSubviews;
- (void)prepareForReuse;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


IB_DESIGNABLE
SWIFT_CLASS("_TtC11NetaloUISDK12GradientView")
@interface GradientView : UIView
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layerClass;)
+ (Class _Nonnull)layerClass SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIImageView;
@class UITapGestureRecognizer;
@class UILongPressGestureRecognizer;

/// Used to wrap a single slideshow item and allow zooming on it
SWIFT_CLASS("_TtC11NetaloUISDK15ImageDetailItem")
@interface ImageDetailItem : UIScrollView <UIScrollViewDelegate>
/// Image view to hold the image
@property (nonatomic, readonly, strong) UIImageView * _Nonnull imageView;
/// Input Source for the item
@property (nonatomic, copy) NSString * _Nullable imageURL;
/// Guesture recognizer to detect double tap to zoom
@property (nonatomic, strong) UITapGestureRecognizer * _Nullable doubleTapGestureRecognizer;
@property (nonatomic, strong) UILongPressGestureRecognizer * _Nullable longPressGesture;
/// Holds if the zoom feature is enabled
@property (nonatomic, readonly) BOOL zoomEnabled;
/// If set to true image is initially zoomed in
@property (nonatomic) BOOL zoomInInitially;
/// Maximum zoom scale
@property (nonatomic) CGFloat maximumScale;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
/// Request to load Image Source to Image View
- (void)loadImage;
- (void)scrollViewDidZoom:(UIScrollView * _Nonnull)scrollView;
- (UIView * _Nullable)viewForZoomingInScrollView:(UIScrollView * _Nonnull)scrollView SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC11NetaloUISDK14IncomingCallVC")
@interface IncomingCallVC : ViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end





IB_DESIGNABLE
SWIFT_CLASS("_TtC11NetaloUISDK15KCCircularTimer")
@interface KCCircularTimer : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// The current value of the timer.
@property (nonatomic) IBInspectable double currentValue;
/// The maximum value of the timer.  Along with the current value, it
/// is used to determine how much of the circle is filled.
@property (nonatomic) IBInspectable double maximumValue;
/// The percent of the size of the view to use
/// as the width of the line of the progress arc.
@property (nonatomic) IBInspectable CGFloat borderFactor;
/// The percent of the size of the view to use
/// as the width of the line of the circle in the
/// background.
@property (nonatomic) IBInspectable CGFloat circleFactor;
/// The percent of the size of the view used to determine the
/// distance the circle is inset from its edge.
@property (nonatomic) IBInspectable CGFloat insetFactor;
/// The color of the progress arc.  Setting this property overrides
/// any previous color set via the tintColor property.
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull progressColor;
/// The color of the background circle.  This property allows setting
/// explicit color not based on the tintColor.
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull circleColor;
/// The alpha of the background circle.  Only used when setting the
/// color via the tintColor.  The tintColor and this alpha are used
/// to set the color of the background circle.  If you need finer
/// control, set the circleColor directly.
@property (nonatomic) IBInspectable CGFloat circleAlpha;
/// The name of the font to use for the numeric timer in the center
/// of the circle.  If set and the font name is valid, it overrides
/// the default which is the system font.
@property (nonatomic, copy) IBInspectable NSString * _Nullable fontName;
/// The font size of the numeric timer in the center of the circle.
/// The default is 0 which results in a font size used based on the
/// inner dimensions of the circle.
@property (nonatomic) IBInspectable CGFloat fontSize;
/// Does the timer move clockwise or counter-clockwise.
@property (nonatomic) IBInspectable BOOL clockwise;
/// Determines if the numeric timer should be shown.
@property (nonatomic) IBInspectable BOOL showNumber;
/// The number of decimal places to display for the value.
/// Valid values are 0, 1, and 2.
@property (nonatomic) IBInspectable NSInteger decimalPlaces;
- (void)didMoveToWindow;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layerClass;)
+ (Class _Nonnull)layerClass SWIFT_WARN_UNUSED_RESULT;
- (void)tintColorDidChange;
@end


SWIFT_CLASS("_TtC11NetaloUISDK23LiveLocationMessageCell")
@interface LiveLocationMessageCell : MessageContentCell
- (void)prepareForReuse;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC11NetaloUISDK15MediaDetailCell")
@interface MediaDetailCell : CollectionViewCell
- (void)awakeFromNib;
- (void)layoutSubviews;
- (void)prepareForReuse;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11NetaloUISDK27MediaLibraryVideoController")
@interface MediaLibraryVideoController : NSObject <AVAudioPlayerDelegate>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface MediaLibraryVideoController (SWIFT_EXTENSION(NetaloUISDK)) <AVPlayerViewControllerDelegate>
@end



SWIFT_CLASS("_TtC11NetaloUISDK18MultiImagePickerVC")
@interface MultiImagePickerVC : ViewController
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@class PHChange;

@interface MultiImagePickerVC (SWIFT_EXTENSION(NetaloUISDK)) <PHPhotoLibraryChangeObserver>
- (void)photoLibraryDidChange:(PHChange * _Nonnull)changeInstance;
@end

@class UIImagePickerController;

@interface MultiImagePickerVC (SWIFT_EXTENSION(NetaloUISDK)) <UIImagePickerControllerDelegate, UINavigationControllerDelegate>
- (void)imagePickerController:(UIImagePickerController * _Nonnull)picker didFinishPickingMediaWithInfo:(NSDictionary<UIImagePickerControllerInfoKey, id> * _Nonnull)info;
@end



@interface MultiImagePickerVC (SWIFT_EXTENSION(NetaloUISDK)) <UICollectionViewDataSourcePrefetching>
- (void)collectionView:(UICollectionView * _Nonnull)collectionView prefetchItemsAtIndexPaths:(NSArray<NSIndexPath *> * _Nonnull)indexPaths;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView cancelPrefetchingForItemsAtIndexPaths:(NSArray<NSIndexPath *> * _Nonnull)indexPaths;
@end


@interface MultiImagePickerVC (SWIFT_EXTENSION(NetaloUISDK)) <UICollectionViewDataSource>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end




@interface MultiImagePickerVC (SWIFT_EXTENSION(NetaloUISDK)) <UICollectionViewDelegate>
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (BOOL)collectionView:(UICollectionView * _Nonnull)collectionView shouldSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didDeselectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


@interface MultiImagePickerVC (SWIFT_EXTENSION(NetaloUISDK)) <UICollectionViewDelegateFlowLayout>
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout minimumLineSpacingForSectionAtIndex:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout minimumInteritemSpacingForSectionAtIndex:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UIEdgeInsets)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout insetForSectionAtIndex:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
@end








SWIFT_CLASS("_TtC11NetaloUISDK15NTDropDownAlert")
@interface NTDropDownAlert : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end





SWIFT_PROTOCOL("_TtP11NetaloUISDK16NetaloUIDelegate_")
@protocol NetaloUIDelegate
- (void)sessionExpired;
- (void)userDidLogout;
- (void)presentWithViewController:(UIViewController * _Nonnull)viewController;
- (void)pushWithViewController:(UIViewController * _Nonnull)viewController;
- (void)popTo:(UIViewController * _Nonnull)viewController;
- (void)openContact;
- (void)switchToMainScreen;
- (UIViewController * _Nullable)topMostViewController SWIFT_WARN_UNUSED_RESULT;
- (UIViewController * _Nullable)getConversationViewController SWIFT_WARN_UNUSED_RESULT;
- (void)updateStatusBarWithStyle:(UIStatusBarStyle)style;
- (void)updateThemeColor:(NSInteger)themeColor;
- (void)checkChatFunctionsWith:(NSString * _Nonnull)userId;
@end

@protocol NetaloUser;

SWIFT_CLASS("_TtC11NetaloUISDK11NetaloUISDK")
@interface NetaloUISDK : NSObject
- (void)setTheme:(NSInteger)themeType;
+ (id <NetaloUser> _Nullable)authorizedUser SWIFT_WARN_UNUSED_RESULT;
- (void)addWithDelegate:(id <NetaloUIDelegate> _Nonnull)delegate;
- (void)removeWithDelegate:(id <NetaloUIDelegate> _Nonnull)delegate;
- (UIViewController * _Nonnull)buildConversationViewController SWIFT_WARN_UNUSED_RESULT;
- (UIViewController * _Nonnull)buildHistoryCallViewController SWIFT_WARN_UNUSED_RESULT;
- (UIViewController * _Nonnull)buildContactViewController SWIFT_WARN_UNUSED_RESULT;
- (UIViewController * _Nonnull)buildProfileViewController SWIFT_WARN_UNUSED_RESULT;
- (UIViewController * _Nonnull)buildChatViewController:(id <NetaloUser> _Nonnull)netaloUser type:(NSInteger)type SWIFT_WARN_UNUSED_RESULT;
- (UIViewController * _Nullable)buildChatViewControllerWithPhoneNumber:(NSString * _Nonnull)phoneNumber SWIFT_WARN_UNUSED_RESULT;
- (void)setWithUser:(id <NetaloUser> _Nonnull)user;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



@interface NetaloUISDK (SWIFT_EXTENSION(NetaloUISDK))
- (nonnull instancetype)initWithAppId:(int64_t)appId appKey:(NSString * _Nonnull)appKey accountKey:(NSString * _Nonnull)accountKey appGroupIdentifier:(NSString * _Nonnull)appGroupIdentifier enviroment:(NSInteger)enviroment userId:(int64_t)userId fullName:(NSString * _Nonnull)fullName userSession:(NSString * _Nonnull)userSession avatarId:(NSString * _Nonnull)avatarId phoneNumber:(NSString * _Nonnull)phoneNumber;
- (nonnull instancetype)initWithAppId:(int64_t)appId appKey:(NSString * _Nonnull)appKey accountKey:(NSString * _Nonnull)accountKey appGroupIdentifier:(NSString * _Nonnull)appGroupIdentifier enviroment:(NSInteger)enviroment;
- (void)setUserWithUserId:(int64_t)userId fullName:(NSString * _Nonnull)fullName userSession:(NSString * _Nonnull)userSession avatarId:(NSString * _Nonnull)avatarId phoneNumber:(NSString * _Nonnull)phoneNumber canCreateGroup:(BOOL)canCreateGroup;
@end

@class UNUserNotificationCenter;
@class UNNotification;
@class UNNotificationResponse;

@interface NetaloUISDK (SWIFT_EXTENSION(NetaloUISDK)) <UNUserNotificationCenterDelegate>
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center willPresentNotification:(UNNotification * _Nonnull)notification withCompletionHandler:(void (^ _Nonnull)(UNNotificationPresentationOptions))completionHandler;
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center didReceiveNotificationResponse:(UNNotificationResponse * _Nonnull)response withCompletionHandler:(void (^ _Nonnull)(void))completionHandler;
@end

@class UIApplication;
@class NSUserActivity;
@protocol UIUserActivityRestoring;
@class UIWindow;

@interface NetaloUISDK (SWIFT_EXTENSION(NetaloUISDK)) <UIApplicationDelegate>
- (BOOL)application:(UIApplication * _Nonnull)application didFinishLaunchingWithOptions:(NSDictionary<UIApplicationLaunchOptionsKey, id> * _Nullable)launchOptions SWIFT_WARN_UNUSED_RESULT;
- (void)applicationDidBecomeActive:(UIApplication * _Nonnull)application;
- (void)applicationWillTerminate:(UIApplication * _Nonnull)application;
- (void)applicationWillResignActive:(UIApplication * _Nonnull)application;
- (void)application:(UIApplication * _Nonnull)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData * _Nonnull)deviceToken;
- (BOOL)application:(UIApplication * _Nonnull)application continueUserActivity:(NSUserActivity * _Nonnull)userActivity restorationHandler:(void (^ _Nonnull)(NSArray<id <UIUserActivityRestoring>> * _Nullable))restorationHandler SWIFT_WARN_UNUSED_RESULT;
- (UIInterfaceOrientationMask)application:(UIApplication * _Nonnull)application supportedInterfaceOrientationsForWindow:(UIWindow * _Nullable)window SWIFT_WARN_UNUSED_RESULT;
- (BOOL)application:(UIApplication * _Nonnull)app openURL:(NSURL * _Nonnull)url options:(NSDictionary<UIApplicationOpenURLOptionsKey, id> * _Nonnull)options SWIFT_WARN_UNUSED_RESULT;
- (BOOL)application:(UIApplication * _Nonnull)application openURL:(NSURL * _Nonnull)url sourceApplication:(NSString * _Nullable)sourceApplication annotation:(id _Nonnull)annotation SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_PROTOCOL("_TtP11NetaloUISDK10NetaloUser_")
@protocol NetaloUser
@property (nonatomic, readonly) int64_t id;
@property (nonatomic, readonly, copy) NSString * _Nonnull phoneNumber;
@property (nonatomic, readonly, copy) NSString * _Nonnull email;
@property (nonatomic, readonly, copy) NSString * _Nonnull fullName;
@property (nonatomic, readonly, copy) NSString * _Nonnull avatarUrl;
@property (nonatomic, readonly, copy) NSString * _Nonnull session;
@property (nonatomic, readonly) BOOL canCreateGroup;
@end





SWIFT_CLASS("_TtC11NetaloUISDK14OutgoingCallVC")
@interface OutgoingCallVC : ViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end






SWIFT_CLASS("_TtC11NetaloUISDK10Permission")
@interface Permission : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end







SWIFT_CLASS("_TtC11NetaloUISDK13QBCallManager")
@interface QBCallManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end






SWIFT_CLASS("_TtC11NetaloUISDK16RMChatBackground")
@interface RMChatBackground : RealmSwiftObject
+ (NSString * _Nullable)primaryKey SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class CALayer;
@class UITouch;
@class UIEvent;

IB_DESIGNABLE
SWIFT_CLASS("_TtC11NetaloUISDK11RangeSlider")
@interface RangeSlider : UIControl
@property (nonatomic) IBInspectable double minimumValue;
@property (nonatomic) IBInspectable double maximumValue;
@property (nonatomic) IBInspectable double lowerValue;
@property (nonatomic) IBInspectable double upperValue;
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull trackTintColor;
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull trackHighlightTintColor;
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull thumbTintColor;
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull thumbBorderColor;
@property (nonatomic) IBInspectable CGFloat thumbBorderWidth;
@property (nonatomic) IBInspectable CGFloat curvaceousness;
@property (nonatomic) CGRect frame;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSublayersOfLayer:(CALayer * _Nonnull)of;
- (BOOL)beginTrackingWithTouch:(UITouch * _Nonnull)touch withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
- (BOOL)continueTrackingWithTouch:(UITouch * _Nonnull)touch withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
- (void)endTrackingWithTouch:(UITouch * _Nullable)touch withEvent:(UIEvent * _Nullable)event;
@end


SWIFT_CLASS("_TtC11NetaloUISDK16SwiftLinkPreview")
@interface SwiftLinkPreview : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class NSURLSession;
@class NSURLSessionTask;
@class NSHTTPURLResponse;

@interface SwiftLinkPreview (SWIFT_EXTENSION(NetaloUISDK)) <NSURLSessionDataDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task willPerformHTTPRedirection:(NSHTTPURLResponse * _Nonnull)response newRequest:(NSURLRequest * _Nonnull)request completionHandler:(void (^ _Nonnull)(NSURLRequest * _Nullable))completionHandler;
@end



enum TTGSnackbarDuration : NSInteger;
enum TTGSnackbarAnimationType : NSInteger;
@class TTGSnackbarLabel;
@class UIFont;
@class UIButton;
@class UIImage;
@class UIActivityIndicatorView;

SWIFT_CLASS("_TtC11NetaloUISDK11TTGSnackbar")
@interface TTGSnackbar : UIView
/// Snackbar default frame
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) CGRect snackbarDefaultFrame;)
+ (CGRect)snackbarDefaultFrame SWIFT_WARN_UNUSED_RESULT;
+ (void)setSnackbarDefaultFrame:(CGRect)value;
/// Snackbar min height
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) CGFloat snackbarMinHeight;)
+ (CGFloat)snackbarMinHeight SWIFT_WARN_UNUSED_RESULT;
+ (void)setSnackbarMinHeight:(CGFloat)value;
/// Tap callback
@property (nonatomic, copy) void (^ _Nullable onTapBlock)(TTGSnackbar * _Nonnull);
/// Swipe callback
@property (nonatomic, copy) void (^ _Nullable onSwipeBlock)(TTGSnackbar * _Nonnull, UISwipeGestureRecognizerDirection);
/// A property to make the snackbar auto dismiss on Swipe Gesture
@property (nonatomic) BOOL shouldDismissOnSwipe;
/// A property to enable left and right margin when using customContentView
@property (nonatomic) BOOL shouldActivateLeftAndRightMarginOnCustomContentView;
/// A property to allow for disabling the use of “Safe Area Layout Guides” on newer OS devices.
/// The purpose of this is to allow the a snackbar to extend under the “Swipe Up for Home” area
/// on iPhone X and newer devices.
@property (nonatomic) BOOL shouldHonorSafeAreaLayoutGuides;
/// Action callback.
@property (nonatomic, copy) void (^ _Nullable actionBlock)(TTGSnackbar * _Nonnull);
/// Second action block
@property (nonatomic, copy) void (^ _Nullable secondActionBlock)(TTGSnackbar * _Nonnull);
/// Dismiss callback.
@property (nonatomic, copy) void (^ _Nullable dismissBlock)(TTGSnackbar * _Nonnull);
/// Snackbar display duration. Default is Short = 1 second.
@property (nonatomic) enum TTGSnackbarDuration duration;
/// Snackbar animation type. Default is SlideFromBottomBackToBottom.
@property (nonatomic) enum TTGSnackbarAnimationType animationType;
/// Show and hide animation duration. Default is 0.3
@property (nonatomic) NSTimeInterval animationDuration;
/// Corner radius: [0, height / 2]. Default is 4
@property (nonatomic) CGFloat _cornerRadius;
/// Border color of snackbar. Default is clear.
@property (nonatomic, strong) UIColor * _Nullable _borderColor;
/// Border width of snackbar. Default is 1.
@property (nonatomic) CGFloat _borderWidth;
/// Top margin. Default is 4, only work when snackbar is at top
@property (nonatomic) CGFloat topMargin;
/// Bottom margin. Default is 4, only work when snackbar is at bottom
@property (nonatomic) CGFloat bottomMargin;
/// Left margin. Default is 4
@property (nonatomic) CGFloat leftMargin;
/// Right margin. Default is 4
@property (nonatomic) CGFloat rightMargin;
/// Content inset. Default is (0, 4, 0, 4)
@property (nonatomic) UIEdgeInsets contentInset;
/// Label content inset. Default is (0, 0, 0, 0)
@property (nonatomic) UIEdgeInsets messageContentInset;
/// Main text label
@property (nonatomic, readonly, strong) TTGSnackbarLabel * _Null_unspecified messageLabel;
/// Main text shown on the snackbar.
@property (nonatomic, copy) NSString * _Nonnull message;
/// Message text color. Default is white.
@property (nonatomic, strong) UIColor * _Nonnull messageTextColor;
/// Message text font. Default is Bold system font (14).
@property (nonatomic, strong) UIFont * _Nonnull messageTextFont;
/// Message text alignment. Default is left
@property (nonatomic) NSTextAlignment messageTextAlign;
/// Action button
@property (nonatomic, readonly, strong) UIButton * _Null_unspecified actionButton;
/// Action button title.
@property (nonatomic, copy) NSString * _Nonnull actionText;
/// Action button image.
@property (nonatomic, strong) UIImage * _Nullable actionIcon;
/// Second action button
@property (nonatomic, readonly, strong) UIButton * _Null_unspecified secondActionButton;
/// Second action button title.
@property (nonatomic, copy) NSString * _Nonnull secondActionText;
/// Second action button image.
@property (nonatomic, strong) UIImage * _Nullable secondActionIcon;
/// Action button title color. Default is white.
@property (nonatomic, strong) UIColor * _Nonnull actionTextColor;
/// Second action button title color. Default is white.
@property (nonatomic, strong) UIColor * _Nonnull secondActionTextColor;
/// Action text font. Default is Bold system font (14).
@property (nonatomic, strong) UIFont * _Nonnull actionTextFont;
/// Second action text font. Default is Bold system font (14).
@property (nonatomic, strong) UIFont * _Nonnull secondActionTextFont;
/// All action button max width, min = 44
@property (nonatomic) CGFloat actionMaxWidth;
/// All action button text number of lines. Default is 1
@property (nonatomic) NSInteger actionTextNumberOfLines;
/// Icon imageView
@property (nonatomic, readonly, strong) UIImageView * _Null_unspecified iconImageView;
/// Icon image
@property (nonatomic, strong) UIImage * _Nullable icon;
/// Icon image content
@property (nonatomic) UIViewContentMode iconContentMode;
/// Icon background color. Default is clear.
@property (nonatomic, strong) UIColor * _Nullable iconBackgroundColor;
/// Icon tint color
@property (nonatomic, strong) UIColor * _Null_unspecified iconTintColor;
/// Icon width
@property (nonatomic) CGFloat iconImageViewWidth;
/// Custom container view
@property (nonatomic, strong) UIView * _Nullable containerView;
/// Custom content view
@property (nonatomic, strong) UIView * _Nullable customContentView;
/// SeparateView background color
@property (nonatomic, strong) UIColor * _Nonnull separateViewBackgroundColor;
/// ActivityIndicatorView
@property (nonatomic, readonly, strong) UIActivityIndicatorView * _Null_unspecified activityIndicatorView;
/// ActivityIndicatorViewStyle
@property (nonatomic) UIActivityIndicatorViewStyle activityIndicatorViewStyle;
/// ActivityIndicatorView color
@property (nonatomic, strong) UIColor * _Nonnull activityIndicatorViewColor;
/// Animation SpringWithDamping. Default is 0.7
@property (nonatomic) CGFloat animationSpringWithDamping;
/// Animation initialSpringVelocity. Default is 5
@property (nonatomic) CGFloat animationInitialSpringVelocity;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
/// Default init
///
/// returns:
/// TTGSnackbar instance
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// Show a single message like a Toast.
/// \param message Message text.
///
/// \param duration Duration type.
///
///
/// returns:
/// TTGSnackbar instance
- (nonnull instancetype)initWithMessage:(NSString * _Nonnull)message duration:(enum TTGSnackbarDuration)duration OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@end





@interface TTGSnackbar (SWIFT_EXTENSION(NetaloUISDK))
/// Show the snackbar.
- (void)show;
@end



@interface TTGSnackbar (SWIFT_EXTENSION(NetaloUISDK))
/// Dismiss the snackbar manually.
- (void)dismiss;
@end

/// Snackbar animation types.
/// <ul>
///   <li>
///     fadeInFadeOut:               Fade in to show and fade out to dismiss.
///   </li>
///   <li>
///     slideFromBottomToTop:        Slide from the bottom of screen to show and slide up to dismiss.
///   </li>
///   <li>
///     slideFromBottomBackToBottom: Slide from the bottom of screen to show and slide back to bottom to dismiss.
///   </li>
///   <li>
///     slideFromLeftToRight:        Slide from the left to show and slide to rigth to dismiss.
///   </li>
///   <li>
///     slideFromRightToLeft:        Slide from the right to show and slide to left to dismiss.
///   </li>
///   <li>
///     slideFromTopToBottom:        Slide from the top of screen to show and slide down to dismiss.
///   </li>
///   <li>
///     slideFromTopBackToTop:       Slide from the top of screen to show and slide back to top to dismiss.
///   </li>
/// </ul>
typedef SWIFT_ENUM(NSInteger, TTGSnackbarAnimationType, closed) {
  TTGSnackbarAnimationTypeFadeInFadeOut = 0,
  TTGSnackbarAnimationTypeSlideFromBottomToTop = 1,
  TTGSnackbarAnimationTypeSlideFromBottomBackToBottom = 2,
  TTGSnackbarAnimationTypeSlideFromLeftToRight = 3,
  TTGSnackbarAnimationTypeSlideFromRightToLeft = 4,
  TTGSnackbarAnimationTypeSlideFromTopToBottom = 5,
  TTGSnackbarAnimationTypeSlideFromTopBackToTop = 6,
};

/// Snackbar display duration types.
/// <ul>
///   <li>
///     short:   1 second
///   </li>
///   <li>
///     middle:  3 seconds
///   </li>
///   <li>
///     long:    5 seconds
///   </li>
///   <li>
///     forever: Not dismiss automatically. Must be dismissed manually.
///   </li>
/// </ul>
typedef SWIFT_ENUM(NSInteger, TTGSnackbarDuration, closed) {
  TTGSnackbarDurationShort = 1,
  TTGSnackbarDurationMiddle = 3,
  TTGSnackbarDurationLong = 5,
  TTGSnackbarDurationForever = 2147483647,
};


SWIFT_CLASS("_TtC11NetaloUISDK16TTGSnackbarLabel")
@interface TTGSnackbarLabel : UILabel
@property (nonatomic) UIEdgeInsets contentInset;
- (void)drawTextInRect:(CGRect)rect;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end














@interface UIColor (SWIFT_EXTENSION(NetaloUISDK))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull ttgDefaultText;)
+ (UIColor * _Nonnull)ttgDefaultText SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull ttgDefaultBackground;)
+ (UIColor * _Nonnull)ttgDefaultBackground SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIColor * _Nonnull ttgDefaultShadow;)
+ (UIColor * _Nonnull)ttgDefaultShadow SWIFT_WARN_UNUSED_RESULT;
@end
































SWIFT_CLASS("_TtC11NetaloUISDK16VideoMessageCell")
@interface VideoMessageCell : MessageContentCell
- (void)layoutSubviews;
- (void)prepareForReuse;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end




@interface ViewController (SWIFT_EXTENSION(NetaloUISDK)) <UIGestureRecognizerDelegate>
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
